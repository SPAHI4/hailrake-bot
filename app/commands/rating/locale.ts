import { pluralize as plural } from 'numeralize-ru';
import { sample as rand } from 'lodash-es';

import { formatNumbers as num } from '../../utils.js';

interface VoteResultPlaceholders {
  oldRaterRating: number;
  newRaterRating: number;
  oldRateeRating: number;
  newRateeRating: number;
  raterName: string;
  rateeName: string;
}

export const t = {
  timeoutText: () => rand(['–ù–û–¢ –†–ï–î–ò', '–ù–û–¢ –≠–ù–ê–§ –ú–ê–ù–ê', '–ó–≠–¢ –í–û–ó –≠–ù –≠–†–†–û–†']),

  timeoutMinutes: ({ minutes }: { minutes: number }) =>
    `–∂–¥–∏ ‚è≥${minutes} ${plural(minutes, '–º–∏–Ω—É—Ç—É', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç')}`,

  ratingNotEnough: ({ rating }: { rating: number }) =>
    num`–±–∞–ª–∞–Ω—Å —Ä–æ—Ñ–ª–æ–≤ –º–µ–Ω—å—à–µ ${rating}... –∑–µ–º–ª—è —Ç–µ–±–µ –ø—É—Ö–æ–º, –±—Ä–∞—Ç–∏—à–∫–∞`,

  votedPositive: (p: VoteResultPlaceholders) =>
    num`<i>${p.raterName}</i> (${p.oldRaterRating}) –¥–∞–ª üí≤ <b>—Ä–æ—Ñ–ª–∞–Ω–∫–æ–π–Ω</b> <i>${p.rateeName}</i> (${p.oldRateeRating} ‚Üí <b>${p.newRateeRating}</b>)`,

  votedNegative: (p: VoteResultPlaceholders) =>
    num`<i>${p.raterName}</i> (${p.oldRaterRating}) –∑–∞–ª–∏–ª —Å–æ–ª—è—Ä—ã <i>${p.rateeName}</i> (${p.oldRateeRating} ‚Üí <b>${p.newRateeRating}</b>)`,

  selfVoteErrorPositive: () => `–Ω–∞–π—Å —Ç—Ä–∞–π, –æ—á–µ—Ä–µ–¥–Ω—è—Ä–∞`,
  selfVoteErrorNegative: () => `–¢—ã —á—Ç–æ, –¥–æ–ª–±–æ–µ–±? –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–∞—É–∑—É, —É –≤–∞—Å –¥–æ–ª–±–æ–µ–± c–∞–º —Å–µ–±–µ –º–∏–Ω—É—Å—ã —Å—Ç–∞–≤–∏—Ç`,
};
